# HG changeset patch
# User Josh Matthews <josh@joshmatthews.net>
# Date 1268793636 -46800
# Node ID ee7b6668f09694fd3486f2f3204e517bb62ad29c
# Parent  dbe08b762fac53d9c3e1ac5f535036ec1029e00e
[mq]: xpcshell-ipc-fix

diff --git a/testing/xpcshell/runxpcshelltests.py b/testing/xpcshell/runxpcshelltests.py
--- a/testing/xpcshell/runxpcshelltests.py
+++ b/testing/xpcshell/runxpcshelltests.py
@@ -78,16 +78,17 @@ class XPCShellTests(object):
 
   def setAbsPath(self):
     """
       Set the absolute path for xpcshell, httpdjspath and xrepath.
       These 3 variables depend on input from the command line and we need to allow for absolute paths.
       This function is overloaded for a remote solution as os.path* won't work remotely.
     """
     self.testharnessdir = os.path.dirname(os.path.abspath(__file__))
+    self.headJSPath = self.testharnessdir.replace("\\", "/") + "/head.js"
     self.xpcshell = os.path.abspath(self.xpcshell)
 
     # we assume that httpd.js lives in components/ relative to xpcshell
     self.httpdJSPath = os.path.join(os.path.dirname(self.xpcshell), 'components', 'httpd.js')
     self.httpdJSPath = replaceBackSlashes(self.httpdJSPath)
 
     if self.xrePath is None:
       self.xrePath = os.path.dirname(self.xpcshell)
@@ -149,16 +150,17 @@ class XPCShellTests(object):
 
   def buildXpcsCmd(self, testdir):
     """
       Load the root head.js file as the first file in our test path, before other head, test, and tail files.
       On a remote system, we overload this to add additional command line arguments, so this gets overloaded.
     """
     self.xpcsCmd = [self.xpcshell, '-g', self.xrePath, '-j', '-s'] + \
         ['-e', 'const _HTTPD_JS_PATH = "%s";' % self.httpdJSPath,
+         '-e', 'const _HEAD_JS_PATH = "%s";' % self.headJSPath,
         '-f', os.path.join(self.testharnessdir, 'head.js')]
 
     if self.debuggerInfo:
       self.xpcsCmd = [self.debuggerInfo["path"]] + self.debuggerInfo["args"] + self.xpcsCmd
 
   def buildTestPath(self):
     """
       If we specifiy a testpath, set the self.testPath variable to be the given directory or file.
