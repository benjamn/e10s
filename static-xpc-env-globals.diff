diff --git a/ipc/testshell/XPCShellEnvironment.cpp b/ipc/testshell/XPCShellEnvironment.cpp
--- a/ipc/testshell/XPCShellEnvironment.cpp
+++ b/ipc/testshell/XPCShellEnvironment.cpp
@@ -523,17 +523,20 @@ Clear(JSContext *cx,
         JS_ClearScope(cx, JSVAL_TO_OBJECT(argv[0]));
     } else {
         JS_ReportError(cx, "'clear' requires an object");
         return JS_FALSE;
     }
     return JS_TRUE;
 }
 
-JSFunctionSpec gGlobalFunctions[] =
+} // namespace {
+
+const JSFunctionSpec
+mozilla::ipc::XPCShellEnvironment::sGlobalFunctions[] =
 {
     {"print",           Print,          0,0,0},
     {"load",            Load,           1,0,0},
     {"quit",            Quit,           0,0,0},
     {"version",         Version,        1,0,0},
     {"build",           BuildDate,      0,0,0},
     {"dumpXPC",         DumpXPC,        1,0,0},
     {"dump",            Dump,           1,0,0},
@@ -551,16 +554,18 @@ JSFunctionSpec gGlobalFunctions[] =
 #ifdef MOZ_CALLGRIND
     {"startCallgrind",  js_StartCallgrind,  0,0,0},
     {"stopCallgrind",   js_StopCallgrind,   0,0,0},
     {"dumpCallgrind",   js_DumpCallgrind,   1,0,0},
 #endif
     {nsnull,nsnull,0,0,0}
 };
 
+namespace {
+
 typedef enum JSShellErrNum
 {
 #define MSG_DEF(name, number, count, exception, format) \
     name = number,
 #include "jsshell.msg"
 #undef MSG_DEF
     JSShellErr_Limit
 #undef MSGDEF
@@ -1184,18 +1189,18 @@ XPCShellEnvironment::Init()
     if (NS_FAILED(rv)) {
         NS_ERROR("Failed to get global JSObject!");
         return false;
     }
 
 
     {
         JSAutoRequest ar(cx);
-
-        if (!JS_DefineFunctions(cx, globalObj, gGlobalFunctions)) {
+        JSFunctionSpec* fs = const_cast<JSFunctionSpec*>(sGlobalFunctions);
+        if (!JS_DefineFunctions(cx, globalObj, fs)) {
             NS_ERROR("JS_DefineFunctions failed!");
             return false;
         }
     }
 
     mGlobalHolder = globalObj;
 
     FILE* runtimeScriptFile = fopen(kDefaultRuntimeScriptFilename, "r");
diff --git a/ipc/testshell/XPCShellEnvironment.h b/ipc/testshell/XPCShellEnvironment.h
--- a/ipc/testshell/XPCShellEnvironment.h
+++ b/ipc/testshell/XPCShellEnvironment.h
@@ -114,16 +114,18 @@ public:
         XPCShellEnvironment* mEnv;
     };
 
 protected:
     XPCShellEnvironment();
     bool Init();
 
 private:
+    static const JSFunctionSpec sGlobalFunctions[];
+
     JSContext* mCx;
     nsAutoJSValHolder mGlobalHolder;
     nsCOMPtr<nsIJSContextStack> mCxStack;
     JSPrincipals* mJSPrincipals;
 
     int mExitCode;
     JSBool mQuitting;
     JSBool mReportWarnings;
